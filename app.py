{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"GdgJ6TnqU0Sf","executionInfo":{"status":"ok","timestamp":1713884846103,"user_tz":-480,"elapsed":2858,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}}},"outputs":[],"source":["# Data processing #\n","import pandas as pd # Data processing - CSV file I/O.\n","import os, shutil, random, glob\n","import numpy as np # Linear algebra\n","\n","# Data modeling & evaluation #\n","from sklearn.tree import DecisionTreeClassifier\n"]},{"cell_type":"code","source":["#Install Streamlit library\n","!pip install -q streamlit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4m3uOYiDVMbh","executionInfo":{"status":"ok","timestamp":1713884870699,"user_tz":-480,"elapsed":19255,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"cb00c238-9f3d-4f12-f066-006eee748e27"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.1/8.1 MB\u001b[0m \u001b[31m30.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.3/207.3 kB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.8/4.8 MB\u001b[0m \u001b[31m52.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m83.0/83.0 kB\u001b[0m \u001b[31m6.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.7/62.7 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["#Create a streamlit app example\n","#%%writefile app.py\n","\n","#import streamlit as st"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6iQYBYw1c5FY","executionInfo":{"status":"ok","timestamp":1713347702609,"user_tz":-480,"elapsed":449,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"ace5047c-6db9-480e-ed4b-9ae7f7945d0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing app.py\n"]}]},{"cell_type":"code","source":["import streamlit as st\n","print('Streamlit version: {}'.format(st.__version__))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJCIv-N-eVrG","executionInfo":{"status":"ok","timestamp":1713884877035,"user_tz":-480,"elapsed":1105,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"b6a1e63a-f216-408e-846a-26dfdb789d32"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Streamlit version: 1.33.0\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SM87WNbHVsNp","executionInfo":{"status":"ok","timestamp":1713884910452,"user_tz":-480,"elapsed":26617,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"b58f74e1-a86b-499e-d304-6fe28890cbe2"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df_X_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_train.csv')\n","df_y_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_train.csv')\n","df_X_validate = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_validate.csv')\n","df_y_validate = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_validate.csv')\n","df_X_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_test.csv')\n","df_y_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_test.csv')"],"metadata":{"id":"7lm9syOiQsjj","executionInfo":{"status":"ok","timestamp":1713884926555,"user_tz":-480,"elapsed":4420,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df_X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"6CEQJ-BzgfZz","executionInfo":{"status":"ok","timestamp":1713884929409,"user_tz":-480,"elapsed":799,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"711568b2-ab89-4d48-9a8a-e77752eab3c4"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender  Senior Citizen  Partner  Dependents  Tenure Months  Phone Service  \\\n","0       1               0        1           1             45              1   \n","1       0               1        1           0             66              1   \n","2       1               0        1           1             69              1   \n","3       1               0        1           0              4              1   \n","4       0               0        1           0             69              1   \n","\n","   Multiple Lines  Internet Service  Online Security  Online Backup  \\\n","0               1                 0                0              0   \n","1               1                 1                0              1   \n","2               1                 0                0              0   \n","3               1                 1                0              0   \n","4               0                 0                0              0   \n","\n","   Device Protection  Tech Support  Streaming TV  Streaming Movies  Contract  \\\n","0                  0             0             0                 0         2   \n","1                  1             0             1                 0         1   \n","2                  0             0             0                 0         2   \n","3                  1             0             1                 0         0   \n","4                  0             0             0                 0         2   \n","\n","   Paperless Billing  Payment Method  Monthly Charges  Total Charges  \n","0                  0               1            24.45        1088.25  \n","1                  1               2            70.85        4738.85  \n","2                  1               2            26.00        1796.55  \n","3                  0               0            65.60         250.10  \n","4                  0               2            19.75        1375.40  "],"text/html":["\n","  <div id=\"df-4f85af63-0d12-4ccc-8931-bd3953c7e831\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Senior Citizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>Tenure Months</th>\n","      <th>Phone Service</th>\n","      <th>Multiple Lines</th>\n","      <th>Internet Service</th>\n","      <th>Online Security</th>\n","      <th>Online Backup</th>\n","      <th>Device Protection</th>\n","      <th>Tech Support</th>\n","      <th>Streaming TV</th>\n","      <th>Streaming Movies</th>\n","      <th>Contract</th>\n","      <th>Paperless Billing</th>\n","      <th>Payment Method</th>\n","      <th>Monthly Charges</th>\n","      <th>Total Charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>24.45</td>\n","      <td>1088.25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>70.85</td>\n","      <td>4738.85</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>26.00</td>\n","      <td>1796.55</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>65.60</td>\n","      <td>250.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>19.75</td>\n","      <td>1375.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f85af63-0d12-4ccc-8931-bd3953c7e831')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f85af63-0d12-4ccc-8931-bd3953c7e831 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f85af63-0d12-4ccc-8931-bd3953c7e831');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fbf1579c-5fcc-491e-9b07-312fb5b144e7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fbf1579c-5fcc-491e-9b07-312fb5b144e7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fbf1579c-5fcc-491e-9b07-312fb5b144e7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_X_train","summary":"{\n  \"name\": \"df_X_train\",\n  \"rows\": 5634,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Senior Citizen\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Partner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure Months\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 0,\n        \"max\": 72,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          25,\n          58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone Service\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Multiple Lines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Internet Service\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Online Security\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Online Backup\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Protection\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tech Support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Streaming TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Streaming Movies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contract\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Paperless Billing\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Payment Method\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monthly Charges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.974318896301416,\n        \"min\": 18.25,\n        \"max\": 118.75,\n        \"num_unique_values\": 1503,\n        \"samples\": [\n          86.1,\n          108.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Charges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2255.3403471605816,\n        \"min\": 0.0,\n        \"max\": 8684.8,\n        \"num_unique_values\": 5298,\n        \"samples\": [\n          1267.2,\n          43.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df_y_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IC-sU3E3gmsv","executionInfo":{"status":"ok","timestamp":1713884934348,"user_tz":-480,"elapsed":496,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"bcdcd548-94f9-4863-c19b-f91a6cbef76c"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Churn Value\n","0            0\n","1            0\n","2            0\n","3            0\n","4            0"],"text/html":["\n","  <div id=\"df-35e27f74-46eb-46fe-8f3a-0c5f41370f72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35e27f74-46eb-46fe-8f3a-0c5f41370f72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-35e27f74-46eb-46fe-8f3a-0c5f41370f72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-35e27f74-46eb-46fe-8f3a-0c5f41370f72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a7f10dc7-53de-4dca-9946-505ab4209929\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a7f10dc7-53de-4dca-9946-505ab4209929')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a7f10dc7-53de-4dca-9946-505ab4209929 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_y_train","summary":"{\n  \"name\": \"df_y_train\",\n  \"rows\": 5634,\n  \"fields\": [\n    {\n      \"column\": \"Churn Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["st.write(\"\"\"\n","# This is a wed application that predict customer churn!\n","\"\"\")\n","\n","st.sidebar.header('User Input Parameters')\n","def user_input_features():\n","  Gender = st.sidebar.slider('Gender', 0, 1, 0)\n","  Senior_Citizen = st.sidebar.slider('Senior Citizen', 0, 1, 0)\n","  Partner = st.sidebar.slider('Partner', 0, 1, 0)\n","  Dependents = st.sidebar.slider('Dependents', 0, 1, 0)\n","  Tenure_Months = st.sidebar.slider('Tenure Months', 0, 72, 0)\n","  Phone_Service = st.sidebar.slider('Phone Service', 0, 1, 0)\n","  Multiple_Lines = st.sidebar.slider('Multiple Lines', 0, 1, 0)\n","  Internet_Service = st.sidebar.slider('Internet Service', 0, 1, 0)\n","  Online_Security = st.sidebar.slider('Online Security', 0, 1, 0)\n","  Online_Backup = st.sidebar.slider('Online Backup', 0, 1, 0)\n","  Device_Protection = st.sidebar.slider('Device Protection', 0, 1, 0)\n","  Tech_Suppoprt = st.sidebar.slider('Tech Suppoprt', 0, 1, 0)\n","  Streaming_TV = st.sidebar.slider('Streaming TV', 0, 1, 0)\n","  Streaming_Movies = st.sidebar.slider('Streaming Movies', 0, 1, 0)\n","  Contract = st.sidebar.slider('Contract', 0, 2, 0)\n","  Paperless_Billing = st.sidebar.slider('Paperless Billing', 0, 1, 0)\n","  Payment_Method = st.sidebar.slider('Payment Method', 0, 3, 0)\n","  Monthly_Charges = st.sidebar.slider('Monthly Charges', 18.25, 118.75, 18.25)\n","  Total_Charges = st.sidebar.slider('Total Charges', 0.00, 8684.80, 0.00)\n","  data = {'Gender': Gender,\n","          'Senior Citizen': Senior_Citizen,\n","          'Partner': Partner,\n","          'Dependents': Dependents,\n","          'Tenure Months': Tenure_Months,\n","          'Phone Service': Phone_Service,\n","          'Multiple Lines': Multiple_Lines,\n","          'Internet Service': Internet_Service,\n","          'Online Security': Online_Security,\n","          'Online Backup': Online_Backup,\n","          'Device Protection': Device_Protection,\n","          'Tech Suppoprt': Tech_Suppoprt,\n","          'Streaming TV': Streaming_TV,\n","          'Streaming Movies': Streaming_Movies,\n","          'Contract': Contract,\n","          'Paperless Billing': Paperless_Billing,\n","          'Payment Method': Payment_Method,\n","          'Monthly Charges': Monthly_Charges,\n","          'Total Charges': Total_Charges}\n","  features = pd.DataFrame(data, index=[0])\n","  return features\n","\n","input_df = user_input_features()\n","st.subheader('User Input Parameters')\n","st.write(input_df)"],"metadata":{"id":"CN3GlrNKYYh_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713884941424,"user_tz":-480,"elapsed":383,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"0ddbbb15-d5fc-487d-c8ed-59c2e8621a79"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["2024-04-23 15:09:01.269 \n","  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n","  command:\n","\n","    streamlit run /usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py [ARGUMENTS]\n"]}]},{"cell_type":"code","source":["!streamlit run /usr/local/lib/python3.10/dist-packages/colab_kernel_launcher.py"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9h0qRTFngURv","executionInfo":{"status":"ok","timestamp":1713885062115,"user_tz":-480,"elapsed":30820,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"3780e885-3e07-417e-97e9-9d9feafff408"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.\n","\u001b[0m\n","\u001b[0m\n","\u001b[34m\u001b[1m  You can now view your Streamlit app in your browser.\u001b[0m\n","\u001b[0m\n","\u001b[34m  Network URL: \u001b[0m\u001b[1mhttp://172.28.0.12:8501\u001b[0m\n","\u001b[34m  External URL: \u001b[0m\u001b[1mhttp://34.106.61.176:8501\u001b[0m\n","\u001b[0m\n","\u001b[34m  Stopping...\u001b[0m\n","^C\n"]}]},{"cell_type":"code","source":["clf_dt = DecisionTreeClassifier(criterion='gini', max_depth=12, min_samples_leaf=6)\n","clf_dt.fit(df_X_train, df_y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ypp7sYn2Q4ta","executionInfo":{"status":"ok","timestamp":1713885069907,"user_tz":-480,"elapsed":386,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"be9fb193-a071-4636-e32e-72c4eadb25e9"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["input_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lO9YUtdYg_eS","executionInfo":{"status":"ok","timestamp":1713885473381,"user_tz":-480,"elapsed":345,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"7ef310fd-5118-49c3-cc72-0655899f37ba"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Gender', 'Senior Citizen', 'Partner', 'Dependents', 'Tenure Months',\n","       'Phone Service', 'Multiple Lines', 'Internet Service',\n","       'Online Security', 'Online Backup', 'Device Protection',\n","       'Tech Suppoprt', 'Streaming TV', 'Streaming Movies', 'Contract',\n","       'Paperless Billing', 'Payment Method', 'Monthly Charges',\n","       'Total Charges'],\n","      dtype='object')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Predict the classes on the test data.\n","y_pred = clf_dt.predict(input_df)\n","y_pred"],"metadata":{"id":"0NgDPbnlRAl1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Predict the classes on the test data, and return the probabilities for each class\n","y_proba = clf_dt.predict_proba(input_df)\n","y_proba"],"metadata":{"id":"Kp3ghGi2RMyW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["st.subheader('Class Labels')\n","st.write(df_y_train)"],"metadata":{"id":"ib8LZIz7UeyR","executionInfo":{"status":"ok","timestamp":1713885261076,"user_tz":-480,"elapsed":385,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["st.subheader('Prediction')\n","st.write(df_y_train[y_pred])"],"metadata":{"id":"CNnE2vKEYbu-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["st.subheader('Prediction Probability')\n","st.write(y_proba)"],"metadata":{"id":"ARFJXex4Uesi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Dn5ey3WcZRRj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"HAggz6Q1Uecs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Install localtunnel to serve the Streamlit app\n","!npm install localtunnel"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMmFVr_jVLIc","executionInfo":{"status":"ok","timestamp":1713282209722,"user_tz":-480,"elapsed":1626,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"1f2c5074-4ba6-4f27-fee9-e2144c8452a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35msaveError\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35menoent\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No description\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No repository field.\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No README data\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No license field.\n","\u001b[0m\n","\u001b[K\u001b[?25h+ localtunnel@2.0.2\n","updated 1 package and audited 36 packages in 0.576s\n","\n","3 packages are looking for funding\n","  run `npm fund` for details\n","\n","found 2 \u001b[93mmoderate\u001b[0m severity vulnerabilities\n","  run `npm audit fix` to fix them, or `npm audit` for details\n"]}]},{"cell_type":"code","source":["#Run the Streamlit app in the background\n","#!streamlit run app.py --server.address=localhost &>/content/logs.txt &\n","!streamlit run app.py & npx localtunnel --port 8501"],"metadata":{"id":"zMkz-bCmVLFT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#This will give you the EnpointIP your Internet is running on. The copy that IP & paste it into the Friendly Reminder page.\n","#Then you should be directed into your streamlit web app page.\n","#This is a great way to test your web app before actual deployment. I hope that helps\n","import urllib\n","print(\"Password/Enpoint IP for localtunnel is:\",urllib.request.urlopen('https://ipv4.icanhazip.com').read().decode('utf8').strip(\"\\n\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qaAnS9_0VLB6","executionInfo":{"status":"ok","timestamp":1713282220561,"user_tz":-480,"elapsed":381,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"29fbec7d-937c-4534-bd8c-de5b074ab664"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Password/Enpoint IP for localtunnel is: 35.237.101.52\n"]}]},{"cell_type":"code","source":["#Expose the Streamlit app on port 8501\n","#Then just click in the url showed.\n","\n","!npx localtunnel --port 8501"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1HOXvkX5VK-i","executionInfo":{"status":"ok","timestamp":1713282546071,"user_tz":-480,"elapsed":321430,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"db5f2462-9bf1-4ca5-b4f7-fc7e5d7d6960"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K\u001b[?25hnpx: installed 22 in 2.615s\n","your url is: https://fruity-berries-suffer.loca.lt\n","^C\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"XpaNznElVK2f"},"execution_count":null,"outputs":[]}]}