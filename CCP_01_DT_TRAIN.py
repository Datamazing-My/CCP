{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1rvcuP99-zM34pGb4B0A545hjsHrtXnsK","timestamp":1713432387905}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":29,"metadata":{"id":"GdgJ6TnqU0Sf","executionInfo":{"status":"ok","timestamp":1713434478063,"user_tz":-480,"elapsed":388,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}}},"outputs":[],"source":["# Data processing #\n","import pandas as pd # Data processing - CSV file I/O.\n","import os, shutil, random, glob\n","import numpy as np # Linear algebra\n","\n","# Data analysis & visualization #\n","import matplotlib #collection of functions for scientific and publication-ready visualization\n","import matplotlib.pyplot as plt # Show image\n","\n","# Data modeling & evaluation #\n","from sklearn.tree import DecisionTreeClassifier\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import Model\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.models import load_model\n","from keras import models\n","\n","# Model evaluation #\n","from sklearn.utils import shuffle\n","from sklearn.utils import all_estimators\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import ConfusionMatrixDisplay\n","from sklearn.metrics import classification_report, accuracy_score, precision_score, recall_score, f1_score\n","\n","# ROC Plot #\n","from sklearn.metrics import RocCurveDisplay"]},{"cell_type":"code","source":["# Save & Loan Model #\n","!pip install joblib\n","import joblib"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SrQntvT2pyKO","executionInfo":{"status":"ok","timestamp":1713434490108,"user_tz":-480,"elapsed":8952,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"b32d58d5-ed17-4b89-ee12-515f26b55576"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (1.4.0)\n"]}]},{"cell_type":"code","source":["#Install Streamlit library\n","#!pip install -q streamlit"],"metadata":{"id":"4m3uOYiDVMbh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Create a streamlit app example\n","#%%writefile app.py\n","\n","#import streamlit as st"],"metadata":{"id":"6iQYBYw1c5FY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#import streamlit as st\n","#print('Streamlit version: {}'.format(st.__version__))"],"metadata":{"id":"cJCIv-N-eVrG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SM87WNbHVsNp","executionInfo":{"status":"ok","timestamp":1713432653899,"user_tz":-480,"elapsed":23811,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"a92bb4b1-e746-461f-c08c-ec4a6a4ae4c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df_X_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_train.csv')\n","df_y_train = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_train.csv')\n","df_X_validate = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_validate.csv')\n","df_y_validate = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_validate.csv')\n","df_X_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/X_test.csv')\n","df_y_test = pd.read_csv('/content/drive/My Drive/Colab Notebooks/y_test.csv')"],"metadata":{"id":"7lm9syOiQsjj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"6CEQJ-BzgfZz","executionInfo":{"status":"ok","timestamp":1713432660643,"user_tz":-480,"elapsed":393,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"0f53b0ea-5897-416a-9693-97e7433682f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender  Senior Citizen  Partner  Dependents  Tenure Months  Phone Service  \\\n","0       1               0        1           1             45              1   \n","1       0               1        1           0             66              1   \n","2       1               0        1           1             69              1   \n","3       1               0        1           0              4              1   \n","4       0               0        1           0             69              1   \n","\n","   Multiple Lines  Internet Service  Online Security  Online Backup  \\\n","0               1                 0                0              0   \n","1               1                 1                0              1   \n","2               1                 0                0              0   \n","3               1                 1                0              0   \n","4               0                 0                0              0   \n","\n","   Device Protection  Tech Support  Streaming TV  Streaming Movies  Contract  \\\n","0                  0             0             0                 0         2   \n","1                  1             0             1                 0         1   \n","2                  0             0             0                 0         2   \n","3                  1             0             1                 0         0   \n","4                  0             0             0                 0         2   \n","\n","   Paperless Billing  Payment Method  Monthly Charges  Total Charges  \n","0                  0               1            24.45        1088.25  \n","1                  1               2            70.85        4738.85  \n","2                  1               2            26.00        1796.55  \n","3                  0               0            65.60         250.10  \n","4                  0               2            19.75        1375.40  "],"text/html":["\n","  <div id=\"df-6d41b799-02b9-4cdb-9265-5e5d092b46bf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Senior Citizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>Tenure Months</th>\n","      <th>Phone Service</th>\n","      <th>Multiple Lines</th>\n","      <th>Internet Service</th>\n","      <th>Online Security</th>\n","      <th>Online Backup</th>\n","      <th>Device Protection</th>\n","      <th>Tech Support</th>\n","      <th>Streaming TV</th>\n","      <th>Streaming Movies</th>\n","      <th>Contract</th>\n","      <th>Paperless Billing</th>\n","      <th>Payment Method</th>\n","      <th>Monthly Charges</th>\n","      <th>Total Charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>24.45</td>\n","      <td>1088.25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>70.85</td>\n","      <td>4738.85</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>26.00</td>\n","      <td>1796.55</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>65.60</td>\n","      <td>250.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>19.75</td>\n","      <td>1375.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d41b799-02b9-4cdb-9265-5e5d092b46bf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d41b799-02b9-4cdb-9265-5e5d092b46bf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d41b799-02b9-4cdb-9265-5e5d092b46bf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23863769-9493-4d70-b52a-71337f826860\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23863769-9493-4d70-b52a-71337f826860')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23863769-9493-4d70-b52a-71337f826860 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_X_train","summary":"{\n  \"name\": \"df_X_train\",\n  \"rows\": 5634,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Senior Citizen\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Partner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure Months\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 0,\n        \"max\": 72,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          25,\n          58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone Service\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Multiple Lines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Internet Service\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Online Security\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Online Backup\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Protection\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tech Support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Streaming TV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Streaming Movies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contract\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Paperless Billing\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Payment Method\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monthly Charges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.974318896301416,\n        \"min\": 18.25,\n        \"max\": 118.75,\n        \"num_unique_values\": 1503,\n        \"samples\": [\n          86.1,\n          108.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Charges\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2255.3403471605816,\n        \"min\": 0.0,\n        \"max\": 8684.8,\n        \"num_unique_values\": 5298,\n        \"samples\": [\n          1267.2,\n          43.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df_y_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IC-sU3E3gmsv","executionInfo":{"status":"ok","timestamp":1713433646351,"user_tz":-480,"elapsed":695,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"c675776a-af27-4c1a-e5ff-df38a6791f0e"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Churn Value\n","0            0\n","1            0\n","2            0\n","3            0\n","4            0"],"text/html":["\n","  <div id=\"df-fb387bd4-dbe8-4fde-bde3-673ebb07a322\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb387bd4-dbe8-4fde-bde3-673ebb07a322')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fb387bd4-dbe8-4fde-bde3-673ebb07a322 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fb387bd4-dbe8-4fde-bde3-673ebb07a322');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a592d94e-f6da-4171-81b4-24e57fca4c34\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a592d94e-f6da-4171-81b4-24e57fca4c34')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a592d94e-f6da-4171-81b4-24e57fca4c34 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_y_train","summary":"{\n  \"name\": \"df_y_train\",\n  \"rows\": 5634,\n  \"fields\": [\n    {\n      \"column\": \"Churn Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["clf_dt = DecisionTreeClassifier(criterion='gini', max_depth=12, min_samples_leaf=6)\n","clf_dt.fit(df_X_train, df_y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ypp7sYn2Q4ta","executionInfo":{"status":"ok","timestamp":1713432704366,"user_tz":-480,"elapsed":504,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"7367421d-9b38-4592-882c-082fc2d33365"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=12, min_samples_leaf=6)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Predict the classes on the validation data.\n","y_pred = clf_dt.predict(df_X_validate)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0NgDPbnlRAl1","executionInfo":{"status":"ok","timestamp":1713432858706,"user_tz":-480,"elapsed":390,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"453d769d-a7af-41d8-95a1-c11bacffa556"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0,\n","       0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Predict the classes on the validation data, and return the probabilities for each class\n","y_proba = clf_dt.predict_proba(df_X_validate)\n","y_proba"],"metadata":{"id":"Kp3ghGi2RMyW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713432897594,"user_tz":-480,"elapsed":5,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"e9d585c5-a262-4c56-a298-38898686497d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.87878788, 0.12121212],\n","       [0.85714286, 0.14285714],\n","       [1.        , 0.        ],\n","       ...,\n","       [0.        , 1.        ],\n","       [1.        , 0.        ],\n","       [0.625     , 0.375     ]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["print(confusion_matrix(df_y_validate, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YNjqgbrOj_a0","executionInfo":{"status":"ok","timestamp":1713433018669,"user_tz":-480,"elapsed":487,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"ac6b341a-ab6d-46a6-9e2f-f321783bfd37"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[450  62]\n"," [ 89 103]]\n"]}]},{"cell_type":"code","source":["print(classification_report(df_y_validate, y_pred, labels=[0,1]))"],"metadata":{"id":"Dn5ey3WcZRRj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713433038167,"user_tz":-480,"elapsed":590,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"66af389e-455f-4d18-866d-b889df2cd0cd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.83      0.88      0.86       512\n","           1       0.62      0.54      0.58       192\n","\n","    accuracy                           0.79       704\n","   macro avg       0.73      0.71      0.72       704\n","weighted avg       0.78      0.79      0.78       704\n","\n"]}]},{"cell_type":"code","source":["RocCurveDisplay.from_predictions(df_y_validate, y_pred)\n","plt.show()"],"metadata":{"id":"tNS7qBwwkVmW","executionInfo":{"status":"ok","timestamp":1713433270105,"user_tz":-480,"elapsed":725,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"b7a710a3-1f47-41c2-8ccc-0d7bb98f240c","colab":{"base_uri":"https://localhost:8080/","height":449}},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["RocCurveDisplay.from_predictions(df_y_validate, y_proba[:, 1])\n","plt.axis(\"square\")\n","plt.xlabel(\"False Positive Rate\")\n","plt.ylabel(\"True Positive Rate\")\n","plt.title(\"Receiver Operating Characteristic (ROC)\")\n","plt.legend()\n","plt.show()"],"metadata":{"id":"wAQozFFskVi9","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1713433663446,"user_tz":-480,"elapsed":1737,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"677408bd-f43b-4c46-ae31-2f27e3e465cd"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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rVs3uLu7Y9q0abCwsMDWrVsxYMAA7NixAy+99BIAIDs7Gz169MDFixfx5ptvws/PDykpKdi1axdu3rwJBwcHqFQqvPDCCzh69CjefvtttGrVCufOncPy5ctx5coV/PTTT2XW1alTJ/j4+GDr1q0IDQ3VeGzLli2wtbVFcHAwACApKQlPPPEEJBIJxo0bB0dHR+zduxcjR45EZmYm3n//fY3158+fD5lMhsmTJ6OgoAAymazMGn755RcAwPDhw8t83NjYGEOGDMG8efNw7NgxBAUFqR/bsGEDsrKyMHbsWOTn5+Ozzz5D3759ce7cOTg7O+u0n0u9++67cHR0xJw5c5CTkwMAOHXqFP766y8MHjwYjRo1QlxcHL766iv07t0b0dHRMDc3R8+ePTFhwgSsXLkSM2bMQKtWrQBA/d/yLF68GEZGRpg8eTIyMjLwySefYOjQoThx4oS6zVdffYVx48ahR48emDhxIuLi4jBgwADY2tqiUaNGFW5/7969KC4uxrBhwyps97BBgwbB29sbixYtQmRkJL799ls4OTnh448/1qirdevWeOGFF2BsbIxffvkF7777LlQqFcaOHauxvcuXL+O1117DO++8g1GjRqFFixY6bSM8PBxvvvkmWrdujenTp8PGxgZnzpxBREQEhgwZgpkzZyIjIwM3b97E8uXLAQCWlpYAoPP7448//sDWrVsxbtw4ODg4wMvLq8x9NHr0aGzfvh3jxo2Dr68v7t27h6NHj+LixYvw8/OrsKay/Pvvv+jRowdMTEzw9ttvw8vLCzExMfjll1+wYMGCcte7desW4uPj4efnV26bh5UOcrGxsVEve9R7UaFQ4MUXX8R3332Ha9euoWnTpti1axcA6PT35evrCzMzMxw7dkzr/VftajxS65HSb/H79+8XycnJIiEhQWzfvl04OjoKuVyuPgwkhBD9+vUTbdu21fgGqVKpRNeuXTWOWc+ZM6fcbzulhyM2btwojIyMtA4RfP311wKAOHbsmHrZgz04IYSYPn26MDExEampqeplBQUFwsbGRqNXNXLkSOHq6ipSUlI0nmPw4MFCoVCoe1elPRMfH59KHYYaMGCAAFBuD08IIXbu3CkAiJUrVwoh7n/7NTMzEzdv3lS3O3HihAAgJk6cqF5W2f1c+v+ue/fuWudFynodpT3PDRs2qJdVdIiyvB5cq1at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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Save file as HDF5 format\n","joblib.dump(clf_dt, \"/content/drive/My Drive/Colab Notebooks/CCP_01_DT.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9p4X3XP0lT7B","executionInfo":{"status":"ok","timestamp":1713434842243,"user_tz":-480,"elapsed":414,"user":{"displayName":"Datamazing My","userId":"04728917878036675364"}},"outputId":"ca50ca2e-9212-4c6c-b84a-6b3bfe946534"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/My Drive/Colab Notebooks/CCP_01_DT.h5']"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":[],"metadata":{"id":"fffL9JpSkVfm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"HAggz6Q1Uecs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Install localtunnel to serve the Streamlit app\n","!npm install localtunnel"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMmFVr_jVLIc","executionInfo":{"status":"ok","timestamp":1713282209722,"user_tz":-480,"elapsed":1626,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"1f2c5074-4ba6-4f27-fee9-e2144c8452a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35msaveError\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35menoent\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No description\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No repository field.\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No README data\n","\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No license field.\n","\u001b[0m\n","\u001b[K\u001b[?25h+ localtunnel@2.0.2\n","updated 1 package and audited 36 packages in 0.576s\n","\n","3 packages are looking for funding\n","  run `npm fund` for details\n","\n","found 2 \u001b[93mmoderate\u001b[0m severity vulnerabilities\n","  run `npm audit fix` to fix them, or `npm audit` for details\n"]}]},{"cell_type":"code","source":["#Run the Streamlit app in the background\n","#!streamlit run app.py --server.address=localhost &>/content/logs.txt &\n","!streamlit run app.py & npx localtunnel --port 8501"],"metadata":{"id":"zMkz-bCmVLFT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#This will give you the EnpointIP your Internet is running on. The copy that IP & paste it into the Friendly Reminder page.\n","#Then you should be directed into your streamlit web app page.\n","#This is a great way to test your web app before actual deployment. I hope that helps\n","import urllib\n","print(\"Password/Enpoint IP for localtunnel is:\",urllib.request.urlopen('https://ipv4.icanhazip.com').read().decode('utf8').strip(\"\\n\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qaAnS9_0VLB6","executionInfo":{"status":"ok","timestamp":1713282220561,"user_tz":-480,"elapsed":381,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"29fbec7d-937c-4534-bd8c-de5b074ab664"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Password/Enpoint IP for localtunnel is: 35.237.101.52\n"]}]},{"cell_type":"code","source":["#Expose the Streamlit app on port 8501\n","#Then just click in the url showed.\n","\n","!npx localtunnel --port 8501"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1HOXvkX5VK-i","executionInfo":{"status":"ok","timestamp":1713282546071,"user_tz":-480,"elapsed":321430,"user":{"displayName":"WAI KHAY CHOW","userId":"00385408872169803334"}},"outputId":"db5f2462-9bf1-4ca5-b4f7-fc7e5d7d6960"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K\u001b[?25hnpx: installed 22 in 2.615s\n","your url is: https://fruity-berries-suffer.loca.lt\n","^C\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"XpaNznElVK2f"},"execution_count":null,"outputs":[]}]}